// <auto-generated />
using System;
using ClientesWebMvc.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClientesWebMvc.Migrations
{
    [DbContext(typeof(ClientesWebMvcContext))]
    partial class ClientesWebMvcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClientesWebMvc.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<int?>("ufId");

                    b.HasKey("Id");

                    b.HasIndex("ufId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("ClientesWebMvc.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CpfOuCpnj");

                    b.Property<string>("NomeOuRazaoSocial");

                    b.Property<string>("OrGaoExpedidor");

                    b.Property<DateTime>("Registro");

                    b.Property<string>("RgOuIe");

                    b.Property<string>("SobrenomeOUNomeFantasia");

                    b.Property<int?>("TipoPessoaId");

                    b.HasKey("Id");

                    b.HasIndex("TipoPessoaId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ClientesWebMvc.Models.ClienteEndereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<int?>("CidadeId");

                    b.Property<int?>("ClienteId");

                    b.Property<string>("Complemento");

                    b.Property<string>("Logradouro");

                    b.Property<string>("Numero");

                    b.Property<string>("Referencia");

                    b.Property<int?>("TipoEnderecoId");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoEnderecoId");

                    b.ToTable("ClienteEndereco");
                });

            modelBuilder.Entity("ClientesWebMvc.Models.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("ClientesWebMvc.Models.TipoEndereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TipoEndereco");
                });

            modelBuilder.Entity("ClientesWebMvc.Models.TipoPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TipoPessoa");
                });

            modelBuilder.Entity("ClientesWebMvc.Models.Uf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<int?>("PaisId");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Uf");
                });

            modelBuilder.Entity("ClientesWebMvc.Models.Cidade", b =>
                {
                    b.HasOne("ClientesWebMvc.Models.Uf", "uf")
                        .WithMany("Cidades")
                        .HasForeignKey("ufId");
                });

            modelBuilder.Entity("ClientesWebMvc.Models.Cliente", b =>
                {
                    b.HasOne("ClientesWebMvc.Models.TipoPessoa", "TipoPessoa")
                        .WithMany("Clientes")
                        .HasForeignKey("TipoPessoaId");
                });

            modelBuilder.Entity("ClientesWebMvc.Models.ClienteEndereco", b =>
                {
                    b.HasOne("ClientesWebMvc.Models.Cidade", "Cidade")
                        .WithMany("ClienteEnderecos")
                        .HasForeignKey("CidadeId");

                    b.HasOne("ClientesWebMvc.Models.Cliente", "Cliente")
                        .WithMany("ClienteEnderecos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("ClientesWebMvc.Models.TipoEndereco", "TipoEndereco")
                        .WithMany("ClienteEnderecos")
                        .HasForeignKey("TipoEnderecoId");
                });

            modelBuilder.Entity("ClientesWebMvc.Models.Uf", b =>
                {
                    b.HasOne("ClientesWebMvc.Models.Pais", "Pais")
                        .WithMany("Ufs")
                        .HasForeignKey("PaisId");
                });
#pragma warning restore 612, 618
        }
    }
}
